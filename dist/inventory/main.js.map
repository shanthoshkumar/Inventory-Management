{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.scss","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/app-routing/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/authguard.guard.ts","webpack:///./src/app/cancelorder/cancelorder.component.html","webpack:///./src/app/cancelorder/cancelorder.component.scss","webpack:///./src/app/cancelorder/cancelorder.component.ts","webpack:///./src/app/customer/customer.component.html","webpack:///./src/app/customer/customer.component.scss","webpack:///./src/app/customer/customer.component.ts","webpack:///./src/app/customerpurchase/customerpurchase.component.html","webpack:///./src/app/customerpurchase/customerpurchase.component.scss","webpack:///./src/app/customerpurchase/customerpurchase.component.ts","webpack:///./src/app/cutomer-guard/customer.guard.ts","webpack:///./src/app/metamask/metamask.component.html","webpack:///./src/app/metamask/metamask.component.scss","webpack:///./src/app/metamask/metamask.component.ts","webpack:///./src/app/product/product.component.html","webpack:///./src/app/product/product.component.scss","webpack:///./src/app/product/product.component.ts","webpack:///./src/app/services/web3services.service.ts","webpack:///./src/app/sort/sort.component.html","webpack:///./src/app/sort/sort.component.scss","webpack:///./src/app/sort/sort.component.ts","webpack:///./src/app/stockproduct/stockproduct.component.html","webpack:///./src/app/stockproduct/stockproduct.component.scss","webpack:///./src/app/stockproduct/stockproduct.component.ts","webpack:///./src/app/transferownership/transferownership.component.html","webpack:///./src/app/transferownership/transferownership.component.scss","webpack:///./src/app/transferownership/transferownership.component.ts","webpack:///./src/app/updateproduct/updateproduct.component.html","webpack:///./src/app/updateproduct/updateproduct.component.scss","webpack:///./src/app/updateproduct/updateproduct.component.ts","webpack:///./src/app/view/view.component.html","webpack:///./src/app/view/view.component.scss","webpack:///./src/app/view/view.component.ts","webpack:///./src/app/viewcus-order/viewcus-order.component.html","webpack:///./src/app/viewcus-order/viewcus-order.component.scss","webpack:///./src/app/viewcus-order/viewcus-order.component.ts","webpack:///./src/app/withdraw/withdraw.component.html","webpack:///./src/app/withdraw/withdraw.component.scss","webpack:///./src/app/withdraw/withdraw.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<mdb-navbar SideClass=\\\"navbar fixed-top navbar-expand-lg navbar-dark pink scrolling-navbar ie-nav\\\" [containerInside]=\\\"false\\\">\\r\\n        <logo>\\r\\n            <a class=\\\"logo navbar-brand\\\" href=\\\"#\\\"><strong>Inventory Management</strong></a>\\r\\n        </logo>\\r\\n        <links>\\r\\n            <ul class=\\\"navbar-nav mr-auto color bg-faded\\\">\\r\\n              <li class=\\\"nav-item waves-light\\\" [routerLinkActive]=\\\"['active']\\\"  mdbWavesEffect>\\r\\n                  <a class=\\\"nav-link\\\" routerLink=\\\"product\\\" >Add Product</a>\\r\\n              </li>\\r\\n              <li class=\\\"nav-item waves-light\\\" [routerLinkActive]=\\\"['active']\\\" mdbWavesEffect>\\r\\n                  <a class=\\\"nav-link\\\"routerLink=\\\"updateproduct\\\">Update Product</a>\\r\\n              </li>\\r\\n              <li class=\\\"nav-item waves-light\\\" [routerLinkActive]=\\\"['active']\\\" mdbWavesEffect>\\r\\n                  <a class=\\\"nav-link\\\"routerLink=\\\"viewcustomerorder\\\">Purchase History</a>\\r\\n              </li>\\r\\n              <li class=\\\"nav-item waves-light\\\" [routerLinkActive]=\\\"['active']\\\" mdbWavesEffect>\\r\\n                  <a class=\\\"nav-link\\\"routerLink=\\\"stockproduct\\\">Products in Stock</a>\\r\\n              </li>\\r\\n              <li class=\\\"nav-item waves-light\\\" [routerLinkActive]=\\\"['active']\\\" mdbWavesEffect>\\r\\n                  <a class=\\\"nav-link\\\"routerLink=\\\"transferowner\\\" >Transfer Ownership</a>\\r\\n              </li>\\r\\n              <li class=\\\"nav-item waves-light\\\" [routerLinkActive]=\\\"['active']\\\"mdbWavesEffect>\\r\\n                    <a class=\\\"nav-link\\\"routerLink=\\\"report\\\" >Sales Report</a>\\r\\n                </li>\\r\\n              <li class=\\\"nav-item waves-light\\\" [routerLinkActive]=\\\"['active']\\\"mdbWavesEffect>\\r\\n                       <a class=\\\"nav-link\\\"routerLink=\\\"sort\\\" >Sort Report</a>\\r\\n                 </li>\\r\\n              <li class=\\\"nav-item waves-light\\\" [routerLinkActive]=\\\"['active']\\\"mdbWavesEffect>\\r\\n                  <a class=\\\"nav-link\\\"routerLink=\\\"withdraw\\\" >Withdraw</a>\\r\\n              </li>\\r\\n              \\r\\n            </ul>\\r\\n            <ul class=\\\"nav navbar-nav navbar-right\\\">\\r\\n                    <!-- <li><b style=\\\"color:white\\\">Account</b><input type=\\\"text\\\" class=\\\"form-control\\\" value={{address}} readonly/></li>&nbsp; -->\\r\\n                    <li><b style=\\\"color:white\\\">Balance</b><input type=\\\"text\\\" class=\\\"form-control\\\" value={{balance}} readonly/></li>\\r\\n              </ul>\\r\\n           \\r\\n        </links>\\r\\n      </mdb-navbar>  \\r\\n      <router-outlet></router-outlet>   \"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { Web3servicesService } from '../services/web3services.service';\r\nimport { Router } from '@angular/router';\r\ndeclare let window: any;\r\nimport * as Web3 from 'web3';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.scss']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n\r\n  public  _web3: any;\r\n  public id1: any;\r\n  public id2: any;\r\n  public account:string;\r\n  public balance:number;\r\n  public product;\r\n  public address;\r\n  public ether;\r\n\r\n  constructor(private wcs:Web3servicesService,private router:Router){\r\n    this.wcs.Fetch_Account().then(acc => this.address = acc); \r\n    this.wcs.Fetch_Balance().then(bal =>this.ether = bal)   \r\n    \r\n  }\r\n \r\n  ngOnInit() \r\n    {\r\n        let meta = this;\r\n      //  meta.alltablework();\r\n        meta.wcs.getUserBalance().then(balance => meta.balance = balance);\r\n        meta.wcs.getAccount().then(acc => {\r\n            this.account = acc;\r\n            meta.id1 = setInterval(function() {\r\n             if (typeof window.web3 !== 'undefined') {\r\n                 meta._web3 = new Web3(window.web3.currentProvider);\r\n                 if (meta._web3.eth.accounts[0] !== meta.account) {\r\n                     meta.account = meta._web3.eth.accounts[0];\r\n                     if (meta._web3.eth.accounts[0] === undefined) {\r\n                         meta.router.navigate(['metamask']);\r\n                         clearInterval(this.interval);\r\n                     } else {\r\n                         alert('Address Change Detected Please Refresh Page');\r\n                         window.location.reload();\r\n                        // meta.router.navigate(['admin']);\r\n                     }\r\n                 }\r\n             } else {\r\n                 meta.router.navigate(['metamask']);\r\n             }\r\n            }, 200);\r\n         });\r\n  \r\n         meta.id2 = setInterval(function() {\r\n          meta.wcs.getUserBalance().then(balance => this.balance = balance);\r\n          meta.wcs.getAccount().then(account => this.balance = account);\r\n        //  meta.alltablework();\r\n      }, 20000);\r\n      \r\n      \r\n    }\r\n   \r\n    ngOnDestroy() {\r\n      if (this.id1) {\r\n        clearInterval(this.id1);\r\n      }\r\n      if (this.id2) {\r\n          clearInterval(this.id2);\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nimport { AppComponent } from '../app.component';\r\nimport { AdminComponent } from '../admin/admin.component';\r\nimport { CustomerComponent } from '../customer/customer.component';\r\nimport { ProductComponent } from '../product/product.component';\r\nimport { UpdateproductComponent } from '../updateproduct/updateproduct.component';\r\nimport { StockproductComponent } from '../stockproduct/stockproduct.component';\r\nimport { ViewcusOrderComponent } from '../viewcus-order/viewcus-order.component';\r\nimport { TransferownershipComponent } from '../transferownership/transferownership.component';\r\nimport { WithdrawComponent } from '../withdraw/withdraw.component';\r\nimport { CustomerpurchaseComponent } from '../customerpurchase/customerpurchase.component';\r\nimport { CancelorderComponent } from '../cancelorder/cancelorder.component';\r\nimport { MetamaskComponent } from '../metamask/metamask.component';\r\nimport { AuthguardGuard } from '../authguard.guard';\r\nimport { CustomerGuard } from '../cutomer-guard/customer.guard';\r\nimport { ViewComponent } from '../view/view.component';\r\nimport { SortComponent } from '../sort/sort.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { \r\n    path: '',\r\n    redirectTo: 'admin',\r\n    pathMatch: 'full'\r\n  },\r\n\r\n  { \r\n    path: 'admin',\r\n    component: AdminComponent,\r\n    canActivate:[AuthguardGuard], \r\n     children:[\r\n      {\r\n        path: 'product',\r\n        component: ProductComponent\r\n      },\r\n      {\r\n        path: 'updateproduct',\r\n        component: UpdateproductComponent\r\n      },\r\n      {\r\n        path: 'viewcustomerorder',\r\n        component: ViewcusOrderComponent\r\n      },\r\n      {\r\n        path: 'stockproduct',\r\n        component: StockproductComponent\r\n      },\r\n      {\r\n        path: 'report',\r\n        component: ViewComponent\r\n      },\r\n      {\r\n        path: 'sort',\r\n        component: SortComponent\r\n      },\r\n      {\r\n        path: 'transferowner',\r\n        component: TransferownershipComponent\r\n      },\r\n      {\r\n        path: 'withdraw',\r\n        component: WithdrawComponent\r\n      },\r\n    ]\r\n  },\r\n  \r\n  {\r\n    path: 'customer',\r\n    component: CustomerComponent,\r\n    canActivate:[CustomerGuard],\r\n    children:[\r\n      {\r\n        path: 'customerpurchase',\r\n        component: CustomerpurchaseComponent\r\n      },\r\n      {\r\n        path: 'cancelorder',\r\n        component: CancelorderComponent\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    path:\"metamask\",\r\n    component:MetamaskComponent,\r\n  }   \r\n  \r\n  ];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports:[RouterModule],\r\n  declarations: [],\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\\r\\n<div class=\\\"row-sm-3\\\">    \\r\\n        <app-admin></app-admin>\\r\\n        <app-customer></app-customer>        \\r\\n    </div>\\r\\n       \\r\\n    <div class=\\\"row-sm-9\\\">\\r\\n            <router-outlet></router-outlet>    \\r\\n        </div>\\r\\n    \"","module.exports = \"\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\r\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { FormsModule ,ReactiveFormsModule} from '@angular/forms';\r\n\r\n\r\n\r\nimport { AppRoutingModule } from './app-routing/app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { AdminComponent } from './admin/admin.component';\r\nimport { CustomerComponent } from './customer/customer.component';\r\nimport { ProductComponent } from './product/product.component';\r\nimport { UpdateproductComponent } from './updateproduct/updateproduct.component';\r\nimport { StockproductComponent } from './stockproduct/stockproduct.component';\r\nimport { ViewcusOrderComponent } from './viewcus-order/viewcus-order.component';\r\nimport { TransferownershipComponent } from './transferownership/transferownership.component';\r\nimport { WithdrawComponent } from './withdraw/withdraw.component';\r\nimport { CustomerpurchaseComponent } from './customerpurchase/customerpurchase.component';\r\nimport { CancelorderComponent } from './cancelorder/cancelorder.component';\r\nimport { MetamaskComponent } from './metamask/metamask.component';\r\nimport { AuthguardGuard } from './authguard.guard';\r\nimport { CustomerGuard } from './cutomer-guard/customer.guard';\r\nimport { Web3servicesService } from './services/web3services.service';\nimport { ViewComponent } from './view/view.component';\nimport { SortComponent } from './sort/sort.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    AdminComponent,\r\n    CustomerComponent,\r\n    ProductComponent,\r\n    UpdateproductComponent,\r\n    StockproductComponent,\r\n    ViewcusOrderComponent,\r\n    TransferownershipComponent,\r\n    WithdrawComponent,\r\n    CustomerpurchaseComponent,\r\n    CancelorderComponent,\r\n    MetamaskComponent,\r\n    ViewComponent,\r\n    SortComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    NgxSpinnerModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MDBBootstrapModule.forRoot()\r\n  ],\r\n  schemas: [ NO_ERRORS_SCHEMA ],\r\n  providers: [AuthguardGuard,CustomerGuard,Web3servicesService],\r\n  \r\n \r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot,Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Web3servicesService } from './services/web3services.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthguardGuard implements CanActivate {\r\n  constructor(private wcs:Web3servicesService,private router:Router) {}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n      return this.wcs.check_admin().then(admin => {\r\n        console.log(admin);\r\n         if (admin !=true){\r\n         // console.log(\"if part\");\r\n          this.router.navigate(['customer']);\r\n          return false;\r\n        } else {\r\n          return true;\r\n        }\r\n      });\r\n    }\r\n  }","module.exports = \"\\r\\n<main>\\r\\n  <div class=\\\"container-fluid\\\" style=\\\"margin-top: 100px; \\\">\\r\\n\\r\\n      <div class=\\\"row col text-center\\\">\\r\\n\\r\\n\\r\\n          <div class=\\\"col-sm-12\\\" >\\r\\n              <div>\\r\\n                  <h5>ORDER DETAILS</h5>\\r\\n                  <h5 style=\\\"color:blue;\\\">(Cancel Within One Hour)</h5>\\r\\n                  <br>\\r\\n              </div>\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"ScrollStyle\\\">\\r\\n    <!--Table-->\\r\\n<table class=\\\"table\\\">\\r\\n\\r\\n    <!--Table head-->\\r\\n    <thead class=\\\"mdb-color darken-3\\\">\\r\\n        <tr class=\\\"text-white\\\">\\r\\n            \\r\\n          <tr class=\\\"text-white\\\">\\r\\n              <th>Order Id</th>\\r\\n              <th>Product Id</th>\\r\\n              <th>Customer Id</th>\\r\\n              <th>ProductName</th>\\r\\n              <th> Quantity</th>\\r\\n              <th>Price</th>\\r\\n              <th>Date</th>\\r\\n              <th>Action</th>\\r\\n          </tr>\\r\\n      </thead>\\r\\n      <!--Table head-->\\r\\n  \\r\\n      <!--Table body-->\\r\\n      <tbody>\\r\\n          <tr *ngFor=\\\"let order of list;\\\" >\\r\\n              <td >{{order.oid}}</td>\\r\\n              <td >{{order.pid}}</td>\\r\\n              <td >{{order.cusid}} </td>\\r\\n              <td >{{order.pname}} </td>\\r\\n              <td>{{order.quantity}}</td>\\r\\n              <td>{{order.price}}</td>\\r\\n              <td>{{order.dateVal | date:'d/M/y'}}</td>\\r\\n             <td><button type=\\\"submit\\\" id=\\\"cancel\\\" (click)=\\\"cancel(order.oid,order.pid);\\\" class=\\\"btn btn-default\\\">cancel</button></td>\\r\\n          </tr>   \\r\\n      </tbody>\\r\\n    <!--Table body-->\\r\\n  </table>\\r\\n  </div>\\r\\n\\r\\n<!--Table-->\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n</main>\\r\\n<ngx-spinner  bdColor=\\\"rgba(51,51,51,0.8)\\\"\\r\\n  size=\\\"medium\\\"\\r\\n  color=\\\"#fff\\\"\\r\\n  loadingText=\\\"Loading...\\\"\\r\\n  type=\\\"ball-scale-multiple\\\"></ngx-spinner>\\r\\n \"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { Web3servicesService } from '../services/web3services.service';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport swal from 'sweetalert';\r\n\r\n\r\n\r\ndeclare let window: any;\r\nimport * as Web3 from 'web3';\r\n\r\n@Component({\r\n  selector: 'app-cancelorder',\r\n  templateUrl: './cancelorder.component.html',\r\n  styleUrls: ['./cancelorder.component.scss']\r\n})\r\nexport class CancelorderComponent implements OnInit {\r\n\r\n  public list=[];\r\n  public  _web3: any;\r\n  public id1: any;\r\n  public id2: any;\r\n  public account:string;\r\n  public balance:number;\r\n  public hashresult;\r\n  \r\n  constructor(public pro: Web3servicesService,private router:Router,private spinner: NgxSpinnerService) { }\r\n  \r\n  ngOnInit() {\r\n    this.pro.getCustomerCount().then(order=>{\r\n      order.forEach(element => {\r\n          this.pro.ViewCustomer(element).then(obj=>{\r\n            var t=(parseInt((Date.now()/1000).toString()));\r\n            let x=obj[9]+(3600);\r\n           if(obj[3]!=\"\"&& obj[8]==1 && obj[2]==this.pro.account && (t-obj[9].toNumber() <= 3600)){\r\n              this.list.push({\"oid\":obj[0],\"pid\":obj[1],\"cusid\":obj[2],\"pname\":obj[3],\"quantity\":obj[5],\"price\":obj[6],\"dateVal\":obj[7]});\r\n           }\r\n          \r\n         })         \r\n      });\r\n    })\r\n    let meta = this;\r\n      //  meta.alltablework();\r\n        meta.pro.getUserBalance().then(balance => meta.balance = balance);\r\n        meta.pro.getAccount().then(acc => {\r\n            this.account = acc;\r\n            meta.id1 = setInterval(function() {\r\n             if (typeof window.web3 !== 'undefined') {\r\n                 meta._web3 = new Web3(window.web3.currentProvider);\r\n                 if (meta._web3.eth.accounts[0] !== meta.account) {\r\n                     meta.account = meta._web3.eth.accounts[0];\r\n                     if (meta._web3.eth.accounts[0] === undefined) {\r\n                         meta.router.navigate(['metamask']);\r\n                         clearInterval(this.interval);\r\n                     } else {\r\n                        /// alert('Address Change Detected Please Refresh Page');\r\n                     }\r\n                 }\r\n             } else {\r\n                 meta.router.navigate(['metamask']);\r\n             }\r\n            }, 200);\r\n         });\r\n  \r\n         meta.id2 = setInterval(function() {\r\n          meta.pro.getUserBalance().then(balance => this.balance = balance);\r\n          meta.pro.getAccount().then(account => this.balance = account);\r\n        //  meta.alltablework();\r\n      }, 20000);\r\n    \r\n  }\r\n\r\n  cancel(a,b){\r\n    let meta=this;\r\n    this.spinner.show();\r\n    this.pro.cancel(a,b).then(res=>{\r\n      if(res==0){\r\n        this.spinner.hide();\r\n        swal(\"operation rejected\");\r\n        window.location.reload();\r\n    }\r\n    else{ \r\n        meta.pro.hash(res).then(result=>{\r\n          this.spinner.hide(); \r\n          swal(result); \r\n          window.location.reload();             \r\n       })\r\n    } \r\n    })       \r\n        \r\n  }\r\n  \r\n}","module.exports = \"<mdb-navbar SideClass=\\\"navbar fixed-top navbar-expand-lg navbar-dark pink scrolling-navbar ie-nav\\\" [containerInside]=\\\"false\\\">\\r\\n  <logo>\\r\\n      <a class=\\\"logo navbar-brand\\\" href=\\\"#\\\"><strong>Inventory Management</strong></a>\\r\\n  </logo>\\r\\n  <links>\\r\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n          \\r\\n          <li class=\\\"nav-item waves-light\\\" [routerLinkActive]=\\\"['active']\\\"  mdbWavesEffect>\\r\\n              <a class=\\\"nav-link\\\" routerLink=\\\"customerpurchase\\\">Customer Purchase</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item waves-light\\\" [routerLinkActive]=\\\"['active']\\\"  mdbWavesEffect>\\r\\n              <a class=\\\"nav-link\\\"routerLink=\\\"cancelorder\\\">Cancel Order</a>\\r\\n          </li>\\r\\n         \\r\\n      </ul>\\r\\n          <ul class=\\\"nav navbar-nav navbar-right\\\">\\r\\n                <li><b style=\\\"color:white\\\">Account</b><input type=\\\"text\\\" class=\\\"form-control\\\" value={{address}} readonly/></li>&nbsp;\\r\\n                <li><b style=\\\"color:white\\\">Balance</b><input type=\\\"text\\\" class=\\\"form-control\\\" value={{ether}} readonly/></li>\\r\\n          </ul>\\r\\n      </links>\\r\\n</mdb-navbar>\\r\\n<router-outlet></router-outlet>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { Web3servicesService } from '../services/web3services.service';\r\nimport { Router } from '@angular/router';\r\n\r\ndeclare let window: any;\r\nimport * as Web3 from 'web3';\r\n\r\n\r\n@Component({\r\n  selector: 'app-customer',\r\n  templateUrl: './customer.component.html',\r\n  styleUrls: ['./customer.component.scss']\r\n})\r\nexport class CustomerComponent implements OnInit {\r\n  public  _web3: any;\r\n  public id1: any;\r\n  public id2: any;\r\n  public account:string;\r\n  public balance:number;\r\n  public address:string;\r\n  public ether:number;\r\n\r\n  \r\n  constructor(public pro: Web3servicesService,private router:Router) { \r\n      this.pro.Fetch_Account().then(acc => this.address = acc); \r\n      this.pro.Fetch_Balance().then(bal =>this.ether = bal)     \r\n\r\n  }\r\n  \r\n  ngOnInit() {\r\n   \r\n    let meta = this;\r\n      //  meta.alltablework();\r\n        meta.pro.getUserBalance().then(balance => meta.balance = balance);\r\n        meta.pro.getAccount().then(acc => {\r\n            this.account = acc;\r\n            meta.id1 = setInterval(function() {\r\n             if (typeof window.web3 !== 'undefined') {\r\n                 meta._web3 = new Web3(window.web3.currentProvider);\r\n                 if (meta._web3.eth.accounts[0] !== meta.account) {\r\n                     meta.account = meta._web3.eth.accounts[0];\r\n                     if (meta._web3.eth.accounts[0] === undefined) {\r\n                         meta.router.navigate(['metamask']);\r\n                         clearInterval(this.interval);\r\n                     } else {\r\n                         //alert('Address Change Detected Please Refresh Page');\r\n                        \r\n                     }\r\n                 }\r\n             } else {\r\n                 meta.router.navigate(['metamask']);\r\n             }\r\n            }, 200);\r\n         });\r\n  \r\n         meta.id2 = setInterval(function() {\r\n          meta.pro.getUserBalance().then(balance => this.balance = balance);\r\n          meta.pro.getAccount().then(account => this.balance = account);\r\n        //  meta.alltablework();\r\n      }, 20000);\r\n    \r\n  }\r\n}\r\n\r\n","module.exports = \"\\r\\n<main>\\r\\n  <div class=\\\"container-fluid\\\" style=\\\"margin-top: 100px; \\\">\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-3\\\" >\\r\\n              <form class=\\\"form-horizontal\\\" [formGroup]=\\\"angForm\\\" novalidate>\\r\\n                <div>\\r\\n                 <h5>Customer Purchase Form</h5>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label class=\\\"control-label col-sm-2\\\" for=\\\"productid\\\">ProductID<font color=\\\"red\\\">*</font></label>\\r\\n                  <div class=\\\"col-sm-4\\\">\\r\\n                    <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"productid\\\" [(ngModel)]=\\\"productid\\\" formControlName=\\\"productid\\\"  (mouseout)=\\\"check()\\\" >\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"control-label col-sm-2\\\" for=\\\"quantity\\\">Quantity<font color=\\\"red\\\">*</font></label>\\r\\n                    <div class=\\\"col-sm-4\\\">\\r\\n                      <input type=\\\"number\\\" class=\\\"form-control\\\" min=\\\"0\\\" name=\\\"quantity\\\" [(ngModel)]=\\\"quantity\\\" formControlName=\\\"quantity\\\" (mouseout)=\\\"quantitycheckOut()\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"control-label col-sm-2\\\" for=\\\"price\\\">Price<font color=\\\"red\\\">*</font></label>\\r\\n                    <div class=\\\"col-sm-4\\\">\\r\\n                      <input type=\\\"number\\\" class=\\\"form-control\\\" min=\\\"0\\\" name=\\\"price\\\" [(ngModel)]=\\\"price\\\"  [value]=\\\"price\\\"formControlName=\\\"price\\\" (mouseenter)=\\\"onKey($event);\\\" readonly >\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\r\\n                      <div *ngIf=\\\"angForm.controls['productid'].valid \\\">\\r\\n                        <div *ngIf=\\\"angForm.controls['quantity'].valid \\\">\\r\\n                          <div *ngIf=\\\"angForm.controls['price'].valid \\\">\\r\\n                              <button type=\\\"submit\\\" (click)=\\\"order();\\\" class=\\\"btn btn-default\\\">ORDER</button>\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                      </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </form>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-8\\\" >\\r\\n              <div>\\r\\n                  <h5> Product Details</h5>\\r\\n              </div>\\r\\n\\r\\n\\r\\n\\r\\n              <div class=\\\"ScrollStyle\\\">\\r\\n<!--Table-->\\r\\n<table class=\\\"table\\\" style=\\\"height:550px;width:600px;overflow-y:auto;display:block;\\\">\\r\\n\\r\\n  <!--Table head-->\\r\\n  <thead class=\\\"mdb-color darken-3\\\">\\r\\n      <tr class=\\\"text-white\\\">\\r\\n         \\r\\n        <th>Product Id</th>\\r\\n        <th>Product Name</th>\\r\\n        <th>Brand Name</th>\\r\\n        <th>Quantity</th>\\r\\n        <th>Price Per Quantity</th>\\r\\n        <th>Date</th>\\r\\n\\r\\n      </tr>\\r\\n  </thead>\\r\\n  <!--Table head-->\\r\\n\\r\\n  <!--Table body-->\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let product of details;\\\">\\r\\n        <td >{{product.pid}}</td>\\r\\n        <td >{{product.pname}} </td>\\r\\n        <td>{{product.brand}}</td>\\r\\n        <td>{{product.quantity}}</td>\\r\\n        <td>{{product.price}}</td>\\r\\n        <td>{{product.dateVal | date:'d/M/y'}}</td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n  <!--Table body-->\\r\\n</table>\\r\\n<!--Table-->\\r\\n</div><br><br><br><br>\\r\\n\\r\\n\\r\\n    <div>\\r\\n        <h5>Purchase Details</h5>\\r\\n    </div>\\r\\n    <div class=\\\"ScrollStyle\\\">\\r\\n<table class=\\\"table\\\" style=\\\"height:550px;width:1000px;overflow-y:auto;display:block;\\\">\\r\\n\\r\\n  <!--Table head-->\\r\\n  <thead class=\\\"mdb-color darken-3\\\">\\r\\n      <tr class=\\\"text-white\\\">\\r\\n          \\r\\n        <tr class=\\\"text-white\\\">\\r\\n            <th>Order Id</th>\\r\\n            <th>Customer Address</th>\\r\\n            <th>Product Id</th>\\r\\n            <th>Product Name</th>\\r\\n            <th>Quantity</th>\\r\\n            <th>Price (in ether)</th>\\r\\n            <th>Date of Purchase</th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <!--Table head-->\\r\\n\\r\\n    <!--Table body-->\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let order of list;\\\">\\r\\n            <td >{{order.oid}}</td>\\r\\n            <td >{{order.cusid}}</td>\\r\\n            <td >{{order.pid}} </td>\\r\\n            <td >{{order.pname}} </td>\\r\\n            <td>{{order.quantity}}</td>\\r\\n            <td>{{order.price}}</td>\\r\\n            <td>{{order.dateVal | date:'d/M/y'}}</td>\\r\\n        </tr>   \\r\\n    </tbody>\\r\\n  <!--Table body-->\\r\\n</table>\\r\\n</div>\\r\\n       </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n</main>\\r\\n<ngx-spinner  bdColor=\\\"rgba(51,51,51,0.8)\\\"\\r\\n  size=\\\"medium\\\"\\r\\n  color=\\\"#fff\\\"\\r\\n  loadingText=\\\"Loading...\\\"\\r\\n  type=\\\"ball-scale-multiple\\\"></ngx-spinner>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators ,FormGroup,FormControl} from '@angular/forms';\r\n\r\nimport { Web3servicesService } from '../services/web3services.service';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport swal from 'sweetalert';\r\n\r\n\r\ndeclare let window: any;\r\nimport * as Web3 from 'web3';\r\n@Component({\r\n  selector: 'app-customerpurchase',\r\n  templateUrl: './customerpurchase.component.html',\r\n  styleUrls: ['./customerpurchase.component.scss']\r\n})\r\nexport class CustomerpurchaseComponent implements OnInit {\r\n  public productid;\r\n  public quantity;\r\n  public price;\r\n  public details=[];\r\n  public list=[];\r\n  public a;\r\n  public  _web3: any;\r\n  public id1: any;\r\n  public id2: any;\r\n  public account:string;\r\n  public balance:number;\r\n  angForm: FormGroup;\r\n\r\n  constructor(public pro: Web3servicesService,private router:Router,private spinner: NgxSpinnerService, private fb: FormBuilder) {\r\n    this.createForm();\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.pro.getproductCount().then(product=>{\r\n      product.forEach(element => {\r\n        console.log(element);\r\n        \r\n        this.pro.ViewProduct(element).then(obj=>{\r\n          console.log(obj);\r\n          if(obj[1]!=\"\")\r\n          {\r\n            obj[4]=obj[4]/100;\r\n            this.details.push({\"pid\":obj[0],\"pname\":obj[1],\"brand\":obj[2],\"quantity\":obj[3],\"price\":obj[4],\"dateVal\":obj[5]});\r\n          }\r\n        })\r\n        \r\n      });\r\n    })\r\n    this.pro.getCustomerCount().then(order=>{\r\n      order.forEach(element => {\r\n          this.pro.ViewCustomer(element).then(obj=>{\r\n           if(obj[3]!=\"\" && obj[2]==this.pro.account && obj[8]==1){\r\n            // obj[6]=obj[6]/100;\r\n              this.list.push({\"oid\":obj[0],\"pid\":obj[1],\"cusid\":obj[2],\"pname\":obj[3],\"quantity\":obj[5],\"price\":obj[6],\"dateVal\":obj[7]});\r\n           }       \r\n         })         \r\n      });\r\n    })\r\n    let meta = this;\r\n    //  meta.alltablework();\r\n      meta.pro.getUserBalance().then(balance => meta.balance = balance);\r\n      meta.pro.getAccount().then(acc => {\r\n          this.account = acc;\r\n          meta.id1 = setInterval(function() {\r\n           if (typeof window.web3 !== 'undefined') {\r\n               meta._web3 = new Web3(window.web3.currentProvider);\r\n               if (meta._web3.eth.accounts[0] !== meta.account) {\r\n                   meta.account = meta._web3.eth.accounts[0];\r\n                   if (meta._web3.eth.accounts[0] === undefined) {\r\n                       meta.router.navigate(['metamask']);\r\n                       clearInterval(this.interval);\r\n                   } else {\r\n                      // alert('Address Change Detected Please Refresh Page');\r\n                   }\r\n               }\r\n           } else {\r\n               meta.router.navigate(['metamask']);\r\n           }\r\n          }, 200);\r\n       });\r\n\r\n       meta.id2 = setInterval(function() {\r\n        meta.pro.getUserBalance().then(balance => this.balance = balance);\r\n        meta.pro.getAccount().then(account => this.balance = account);\r\n      //  meta.alltablework();\r\n    }, 20000);\r\n  \r\n  }\r\n  \r\n  onKey(e){\r\n    this.pro.ViewProduct1(this.productid).then(res=>{\r\n      this.price=(res[4]/100)*this.quantity;\r\n      console.log(this.price);\r\n    })\r\n  }\r\n\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n        productid: ['', Validators.required ],\r\n        quantity: ['', Validators.required ],\r\n        price: ['', Validators.required ],\r\n    });\r\n  }\r\n\r\n  check(){\r\n    this.pro.ViewProduct(this.productid).then(res=>{\r\n          if(res[0]== this.productid){\r\n           \r\n          }\r\n          else{\r\n            swal(\"Invalid Product id\")\r\n          }\r\n          \r\n    })\r\n }\r\n check1(){\r\n  this.pro.ViewProduct(this.productid).then(res=>{\r\n        if(res[0]== this.productid){\r\n         \r\n        }\r\n        \r\n  })\r\n}\r\n//  checkOut(){\r\n//    this.pro.ViewProduct(this.productid).then(res=>{\r\n//          if(res[0]== this.productid && res[4]!=0){\r\n//            //swal(\"valid\");\r\n//          }\r\n//          else{\r\n//             swal(\"Invalid Product Id\");\r\n//          }\r\n//    })\r\n// }\r\nquantitycheckOut(){\r\n  this.pro.ViewProduct(this.productid).then(res=>{\r\n        if( res[3]!=0){\r\n         //s swal(\"valid\");\r\n        }\r\n        else{\r\n           swal(\"Out Of Stock\");\r\n        }\r\n  })\r\n}\r\n\r\n\r\n  order(){\r\n    let meta=this;\r\n    meta.spinner.show();\r\n    meta.pro.order(this.productid,this.quantity,this.price).then(res=>{\r\n      if(res==0){\r\n        this.spinner.hide();\r\n        swal(\"operation rejected\");\r\n        this.productid=\"\";\r\n        this.quantity=\"\";\r\n        this.price=\"\";\r\n        window.location.reload();\r\n    }\r\n    else{ \r\n        meta.pro.hash(res).then(result=>{\r\n          this.spinner.hide(); \r\n          swal(result); \r\n          this.productid=\"\";\r\n          this.quantity=\"\";\r\n          this.price=\"\";\r\n          window.location.reload();             \r\n       })\r\n    }\r\n      \r\n    })\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot,Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Web3servicesService } from '../services/web3services.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CustomerGuard implements CanActivate {\r\n  constructor(private wcs:Web3servicesService,private router:Router){}\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n      return this.wcs.check_admin().then(admin => {\r\n        console.log(admin);\r\n         if (admin !=false){\r\n          console.log(\"if part\");\r\n          this.router.navigate(['admin']);\r\n          return false;\r\n        } else {\r\n          console.log(\"else part\");\r\n          \r\n        //this.router.navigate(['admin']);\r\n          return true;\r\n        }\r\n      });\r\n  }\r\n}\r\n\r\n","module.exports = \"<html>\\r\\n\\t<head>\\r\\n\\t\\t<title>Ethereum Account Connectivity Error Page</title>\\r\\n\\t</head>\\r\\n\\t<body>\\r\\n\\t\\t <img src=\\\"./assets/metamask_logo.png\\\"/> \\r\\n\\t\\t<!-- <center> -->\\r\\n\\t\\t\\t<p>\\r\\n\\t\\t\\t\\t<br>\\r\\n\\t\\t\\t\\t<br>\\r\\n\\t\\t\\t\\t<br>There was an error while fetching your account.\\r\\n\\t\\t\\t\\t<br>Make sure your Ethereum client is configured correctly\\r\\n\\r\\n\\t\\t\\t\\t<br>Tips:\\r\\n\\t\\t\\t\\t<br>Ensure you unlocked your MetaMask plugin.\\r\\n\\t\\t\\t\\t<br>If you don't have MetaMask plugin install here: \\r\\n\\t\\t\\t\\t<br><a href =\\\"https://metamask.io/ \\\">https://metamask.io/</a>\\r\\n\\t\\t\\t</p>\\r\\n\\t\\t<!-- </center> -->\\r\\n\\t</body>\\r\\n</html>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { Web3servicesService } from '../services/web3services.service';\r\nimport { Router } from '@angular/router';\r\ndeclare let window: any;\r\nimport * as Web3 from 'web3';\r\n\r\n@Component({\r\n  selector: 'app-metamask',\r\n  templateUrl: './metamask.component.html',\r\n  styleUrls: ['./metamask.component.scss']\r\n})\r\nexport class MetamaskComponent implements OnInit {\r\n  public  _web3: any;\r\n  public id1: any;\r\n\r\n  constructor(private wcs: Web3servicesService, private router: Router) {  }\r\n\r\n  ngOnInit() {\r\n    let meta = this;\r\n    this.id1 = setInterval(function() {\r\n      if (typeof window.web3 !== 'undefined') {\r\n        meta._web3 = new Web3(window.web3.currentProvider);\r\n        if (meta._web3.eth.accounts[0] !== undefined) {\r\n          meta.router.navigate(['metamask']);\r\n        }\r\n        if(meta._web3.eth.accounts!=meta._web3.eth.accounts[0]){\r\n          meta.router.navigate(['']);\r\n        }\r\n      }\r\n    }, 200);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.id1) {\r\n      clearInterval(this.id1);\r\n    }\r\n  }\r\n}","module.exports = \"\\r\\n  <div class=\\\"container\\\" style=\\\"margin-top: 100px; \\\">\\r\\n    <div class=\\\"row\\\" style=\\\"margin-top: 300px; \\\">\\r\\n        <div class=\\\"col-sm-4\\\"></div>\\r\\n        <div class=\\\"col-sm-8\\\">\\r\\n      \\r\\n                <form class=\\\"form-horizontal\\\" [formGroup]=\\\"angForm\\\" novalidate >\\r\\n                  <div>\\r\\n                   <h3>Enter the Product Details </h3>\\r\\n                   <br>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"control-label col-sm-2\\\" for=\\\"productname\\\">Name<font color=\\\"red\\\">*</font></label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <input  class=\\\"form-control\\\" onkeypress='return ((event.charCode >= 65 && event.charCode <= 90) || (event.charCode >= 97 && event.charCode <= 122) || (event.charCode == 32))' name=\\\"productname\\\" [(ngModel)]=\\\"productname\\\" formControlName=\\\"productname\\\" placeholder=\\\"Enter Product Name\\\" >\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"control-label col-sm-2\\\" for=\\\"brand\\\">Brand<font color=\\\"red\\\">*</font></label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <input class=\\\"form-control\\\" name=\\\"brand\\\" [(ngModel)]=\\\"brand\\\"  formControlName=\\\"brand\\\" placeholder=\\\"Enter Brand Name\\\" >\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"control-label col-sm-2\\\" for=\\\"quantity\\\">Quantity<font color=\\\"red\\\">*</font></label>\\r\\n                      <div class=\\\"col-sm-6\\\">\\r\\n                        <input type=\\\"number\\\" class=\\\"form-control\\\" min=\\\"0\\\" name=\\\"quantity\\\" [(ngModel)]=\\\"quantity\\\" [value]=\\\"quantity\\\" formControlName=\\\"quantity\\\" placeholder=\\\"Enter no of quantity\\\" required>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"control-label col-sm-4\\\" for=\\\"amount\\\">Price Per Quantity<font color=\\\"red\\\">*</font></label>\\r\\n                      <div class=\\\"col-sm-6\\\">\\r\\n                        <input type=\\\"number\\\" class=\\\"form-control\\\" min=\\\"1\\\" name=\\\"amount\\\"  [(ngModel)]=\\\"amount\\\" [value]=\\\"amount\\\" formControlName=\\\"amount\\\" placeholder=\\\"Enter amount in Ether\\\" required>\\r\\n                      </div>\\r\\n                    </div>\\r\\n    \\r\\n                  \\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\r\\n                        <div *ngIf=\\\"angForm.controls['productname'].valid \\\">\\r\\n                          <div *ngIf=\\\"angForm.controls['brand'].valid\\\"> \\r\\n                            <div *ngIf=\\\"angForm.controls['quantity'].valid\\\"> \\r\\n                              <div *ngIf=\\\"angForm.controls['amount'].valid\\\">\\r\\n                                <button type=\\\"submit\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-default\\\">ADD</button>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </form>\\r\\n            </div>\\r\\n    </div>\\r\\n    </div>\\r\\n\\r\\n         \\r\\n\\r\\n<ngx-spinner  bdColor=\\\"rgba(51,51,51,0.8)\\\"\\r\\nsize=\\\"medium\\\"\\r\\ncolor=\\\"#fff\\\"\\r\\nloadingText=\\\"Loading ...\\\"\\r\\ntype=\\\"ball-scale-multiple\\\"></ngx-spinner>\\r\\n\"","module.exports = \"h3 {\\n  color: #e91e63; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Web3servicesService } from '../services/web3services.service';\r\nimport { FormBuilder, Validators ,FormGroup,FormControl} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport {NG_VALIDATORS} from '@angular/forms';\r\n\r\ndeclare let window: any;\r\nimport * as Web3 from 'web3';\r\n\r\n@Component({\r\n  selector: 'app-product',\r\n  templateUrl: './product.component.html',\r\n  styleUrls: ['./product.component.scss']\r\n})\r\nexport class ProductComponent implements OnInit {\r\n  public productname;\r\n  public brand;\r\n  public quantity;\r\n  public amount;\r\n  angForm: FormGroup;\r\n\r\n  constructor(private web3Service:Web3servicesService,private router:Router,private spinner: NgxSpinnerService,private fb: FormBuilder) {\r\n  \r\n    this.createForm();\r\n\r\n  }\r\n  \r\n  public  _web3: any;\r\n  public id1: any;\r\n  public id2: any;\r\n  public account:string;\r\n  public balance:number;\r\n  public hashvalue;\r\n  public a;\r\n  \r\n  ngOnInit() {\r\n  \r\n    let meta = this;\r\n      //  meta.alltablework();\r\n        meta.web3Service.getUserBalance().then(balance => meta.balance = balance);\r\n        meta.web3Service.getAccount().then(acc => {\r\n            this.account = acc;\r\n            console.log(this.account);\r\n            meta.id1 = setInterval(function() {\r\n             if (typeof window.web3 !== 'undefined') {\r\n                 meta._web3 = new Web3(window.web3.currentProvider);\r\n                 if (meta._web3.eth.accounts[0] !== meta.account) {\r\n                     meta.account = meta._web3.eth.accounts[0];\r\n                     if (meta._web3.eth.accounts[0] === undefined) {\r\n                         meta.router.navigate(['metamask']);\r\n                         clearInterval(this.interval);\r\n                     } else {\r\n                         //alert('Address Change Detected Please Refresh Page');\r\n                     }\r\n                 }\r\n             } else {\r\n                 meta.router.navigate(['metamask']);\r\n             }\r\n            }, 200);\r\n         });\r\n  \r\n         meta.id2 = setInterval(function() {\r\n          meta.web3Service.getUserBalance().then(balance => this.balance = balance);\r\n          meta.web3Service.getAccount().then(account => this.balance = account);\r\n      }, 20000);\r\n  }\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n       productname: ['', Validators.required ],\r\n       brand: ['', Validators.required ],\r\n       quantity: ['', Validators.required ],\r\n       amount: ['', Validators.required ]\r\n    });\r\n  }\r\n  submit(){\r\n    let meta=this;\r\n    meta.spinner.show();\r\n    this.amount=this.amount*100;\r\n    console.log(\"before product\")\r\n     meta.web3Service.Product(this.productname,this.brand,this.quantity,this.amount).then(res=>{ \r\n        console.log(\"After Product\");\r\n        meta.spinner.hide();\r\n         if(res==0){\r\n            console.log(\"res==0\")\r\n             swal(\"operation rejected\");\r\n             this.productname=\"\";\r\n             this.quantity=\"\";\r\n             this.brand=\"\";\r\n             this.amount=\"\";    \r\n         }\r\n         else{ \r\n            console.log(\"In else\")\r\n             meta.web3Service.hash(res).then(result=>{\r\n                console.log(\"After Hash\")\r\n               swal(result);\r\n               this.productname=\"\";\r\n               this.quantity=\"\";\r\n               this.brand=\"\";\r\n               this.amount=\"\";    \r\n                    \r\n            })\r\n         }\r\n    });\r\n  \r\n  }\r\n \r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport * as Web3 from 'web3';\r\nimport { promise } from 'protractor';\r\n\r\ndeclare let require: any;\r\ndeclare let window: any;\r\n\r\nlet inventoryabi = require('../inventory.json');\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class Web3servicesService {\r\n  private _account: string = null;\r\n  private _web3: any;\r\n  public account:string;\r\n  private _tokenContract: any;\r\n  private _tokenContractAddress: string = \"0x931e5417ee2587b96fabBA25B666302222b426f2\";//\"0x3f2089cd5b7518768e84cc198bcdc8aa162b8cab\";\r\n\r\nconstructor() { \r\n  if (typeof window.web3 !== 'undefined') { \r\n    // Use Mist/MetaMask's provider\r\n    this._web3 = new Web3(window.web3.currentProvider);\r\n  } \r\n  else \r\n  {\r\n    console.warn(\"Please use a dapp browser like mist or MetaMask plugin for chrome\");\r\n  }\r\n  this._web3.version.getNetwork((err,netId)=>\r\n    {\r\n      switch(netId)\r\n      {\r\n        case \"1\":\r\n          console.log('This is mainnet');\r\n          break;\r\n        case \"2\":\r\n          console.log('This is deprecated Morden test network');\r\n          break;\r\n        case \"3\":\r\n          console.log('This is ropsten test network');\r\n          break;\r\n        case \"4\":\r\n          console.log('This is the Rinkeby test network');\r\n        case \"42\":\r\n          console.log('This is the kovan test network');\r\n          break;\r\n        default:\r\n          console.log('This is an unknown network.');\r\n      }\t\r\n    });\r\n  this._tokenContract = this._web3.eth.contract(inventoryabi).at(this._tokenContractAddress);\r\n  this.Fetch_Account();\r\n  this.Fetch_Balance();\r\n}\r\n\r\n\r\n//getAccount details\r\npublic async getAccount(): Promise<string> {\r\nif (this._account == null) {\r\n  this._account = await new Promise((resolve, reject) => {\r\n    this._web3.eth.getAccounts((err, accs) => {\r\n      if (err != null) {\r\n        alert('There was an error fetching your accounts.');\r\n        return;\r\n      }\r\n\r\n      if (accs.length === 0) {\r\n        alert(\r\n          'Couldn\\'t get any accounts! Make sure your Ethereum client is configured correctly.'\r\n        );\r\n        return;\r\n      }\r\n      resolve(accs[0]);\r\n      this.account=accs[0];\r\n    })\r\n  }) as string;\r\n\r\n  this._web3.eth.defaultAccount = this._account;\r\n}\r\n\r\nreturn Promise.resolve(this._account);\r\n}\r\n\r\n//getBalance\r\npublic async getUserBalance(): Promise<number> {\r\n  let account = await this.getAccount();\r\n\r\n  return new Promise((resolve, reject) => {\r\n    let _web3 = this._web3;\r\n    this._tokenContract.getbalance.call( function (err, result) {\r\n      if(err != null) {\r\n        reject(err);\r\n        resolve(0);\r\n      }\r\n\r\n      resolve(_web3.fromWei(result))\r\n    });\r\n  }) as Promise<number>;\r\n}\r\n\r\n//Add Product\r\npublic async Product(a,b,c,d): Promise<any> {\r\n  let account = await this.getAccount();\r\n\r\n  return new Promise((resolve, reject) => {\r\n    let _web3 = this._web3;\r\n    console.log(\"new Promise\")\r\n    console.log(a,b,c,d)\r\n    this._tokenContract.p_details(a,b,c,d,{from:account,gas: 600000},function (err, result) {\r\n      console.log(\"hi\")\r\n      console.log(err)\r\n      console.log(result)\r\n      if(err != null) {\r\n        console.log(err);\r\n        resolve(0);\r\n      }\r\n     else{\r\n      console.log(result);\r\n      resolve(result);\r\n     }\r\n       \r\n    });\r\n  }) as Promise<any>;\r\n}\r\n\r\n//Metamask Account \r\npublic async Fetch_Account(): Promise<string> {\r\n  if (this.account == null) {\r\n    this.account = await new Promise((resolve, reject) => {\r\n      this._web3.eth.getAccounts((err, accs) => {\r\n        if (err != null) {\r\n          // this.router.navigate(['metamask']);\r\n          return;\r\n        }\r\n        if (accs.length === 0) {\r\n          // this.router.navigate(['metamask']);\r\n          return;\r\n        }\r\n        resolve(accs[0]);\r\n      })\r\n    }) as string;\r\n    this._web3.eth.defaultAccount = this.account;\r\n  }\r\n  return Promise.resolve(this.account);\r\n}\r\n\r\n//metamask Account Balance\r\npublic async Fetch_Balance(): Promise<number> {\r\n  let account = await this.Fetch_Account();\r\n\r\n  return new Promise((resolve, reject) => {\r\n    let _web3 = this._web3;\r\n    this._web3.eth.getBalance(account,function(err,result){\r\n        if(err != null) {\r\n          reject(err);\r\n        }\r\n        resolve(_web3.fromWei(result));\r\n    })\r\n  }) as Promise<number>;\r\n}\r\n\r\n//getProductCount\r\npublic async getproductCount(): Promise<any> {\r\n  let account = await this.getAccount();\r\n\r\n  return new Promise((resolve, reject) => {\r\n    let _web3 = this._web3;\r\n    this._tokenContract.productCount({from:account,gas: 600000},function (err, result) {\r\n      if(err != null) {\r\n        reject(err);\r\n      }\r\n      const arr:number[] = [];\r\n      for(var i=1;i<= result.toNumber();i++){\r\n        arr.push(i);\r\n    }\r\n    resolve(arr);\r\n   });\r\n  }) as Promise<number[]>;\r\n}\r\n\r\n//Viewproduct\r\npublic async ViewProduct(pid): Promise<object> {\r\n  let account = await this.getAccount();\r\n\r\n  return new Promise((resolve, reject) => {\r\n    let _web3 = this._web3;\r\n    this._tokenContract.viewproduct.call(pid,{from:account,gas: 600000},function (err, result) {\r\n      if(err != null) {\r\n        reject(err);\r\n      }\r\n    //  result[0] = result[0].toNumber();\r\n      var t= new Date(result[5]*1000);\r\n      result[5]=t;\r\n               resolve(result);\r\n   });\r\n  }) as Promise<object>;\r\n}\r\n\r\n\r\npublic async ViewProduct1(pid): Promise<object> {\r\n  let account = await this.getAccount();\r\n\r\n  return new Promise((resolve, reject) => {\r\n    let _web3 = this._web3;\r\n    this._tokenContract.viewproduct.call(pid,{from:account,gas: 600000},function (err, result) {\r\n      if(err != null) {\r\n        reject(err);\r\n      }\r\n     result[4] = result[4].toNumber();\r\n      var t= new Date(result[5]*1000);\r\n      result[5]=t;\r\n      resolve(result);\r\n   });\r\n  }) as Promise<object>;\r\n}\r\n\r\n\r\n//updateproduct\r\npublic async update_product(a,b,c): Promise<any> {\r\n  let account = await this.getAccount();\r\n\r\n  return new Promise((resolve, reject) => {\r\n    let _web3 = this._web3;\r\n    this._tokenContract.update_product(a,b,c,{from:account,gas: 600000},function (err, result) {\r\n      if(err != null) {\r\n        console.log(err);          \r\n        resolve(0);\r\n      }\r\n      else\r\n       resolve(result);\r\n   });\r\n  }) as Promise<any>;\r\n}\r\n\r\n//getCustomerCount\r\npublic async getCustomerCount(): Promise<any> {\r\n  let account = await this.getAccount();\r\n\r\n  return new Promise((resolve, reject) => {\r\n    let _web3 = this._web3;\r\n    this._tokenContract.ordercount({from:account,gas: 600000},function (err, result) {\r\n      if(err != null) {\r\n        reject(err);\r\n      }\r\n      const arr:number[] = [];\r\n      for(var i=1;i<= result.toNumber();i++){\r\n        arr.push(i);\r\n    }\r\n    resolve(arr);\r\n   });\r\n  }) as Promise<number[]>;\r\n}\r\n\r\n//viewcustomer\r\npublic async ViewCustomer(oid): Promise<object> {\r\n  let account = await this.getAccount();\r\n\r\n  return new Promise((resolve, reject) => {\r\n    let _web3 = this._web3;\r\n    this._tokenContract.ORDER(oid,{from:account,gas: 600000},function (err, result) {\r\n      if(err != null) {\r\n        reject(err);\r\n      }\r\n      result[9]=result[7];\r\n    result[6]=_web3.fromWei(result[6],\"ether\");\r\n    var t= new Date(result[7]*1000);\r\n    result[7]=t;\r\n\r\n    resolve(result);\r\n   });\r\n  }) as Promise<object>;\r\n}\r\n\r\n//transferOwnership\r\npublic async TransferownerShip(address): Promise<any> {\r\n  let account = await this.getAccount();\r\n\r\n  return new Promise((resolve, reject) => {\r\n    let _web3 = this._web3;\r\n    this._tokenContract.transferOwnership(address,{from:account,gas: 600000},function (err, result) {\r\n      if(err != null) {\r\n        console.log(err);\r\n        resolve(0);\r\n      }\r\n       resolve(result);\r\n   });\r\n  }) as Promise<any>;\r\n}\r\n\r\n//Withdraw\r\npublic async WithDraw(amount): Promise<any> {\r\nlet account = await this.getAccount();\r\n\r\nreturn new Promise((resolve, reject) => {\r\n  let _web3 = this._web3;\r\n  this._tokenContract.Transfer_ToOwner(amount,{from:account,gas: 600000},function (err, result) {\r\n    if(err != null) {\r\n     console.log(err);\r\n      resolve(0);\r\n    }\r\n     resolve(result);\r\n });\r\n}) as Promise<any>;\r\n}\r\n\r\n//order\r\npublic async order(a,b,c): Promise<any> {\r\nlet account = await this.getAccount();\r\n\r\nreturn new Promise((resolve, reject) => {\r\n  let _web3 = this._web3;\r\n  this._tokenContract.order(a,b,{from:account,value:_web3.toWei(c,\"ether\"),gas: 600000},function (err, result) {\r\n    if(err != null) {\r\n      console.log(err);\r\n      resolve(0);\r\n    }\r\n     resolve(result);\r\n });\r\n}) as Promise<any>;\r\n}\r\n\r\n//cancelorder\r\npublic async cancel(a,b): Promise<any> {\r\nlet account = await this.getAccount();\r\n\r\nreturn new Promise((resolve, reject) => {\r\n  let _web3 = this._web3;\r\n  this._tokenContract.ordercancel(a,b,{from:account,gas: 600000},function (err, result) {\r\n    if(err != null) {\r\n      reject(err);\r\n    }\r\n     resolve(result);\r\n });\r\n}) as Promise<any>;\r\n}\r\n\r\n//getbalance\r\npublic async getbalance(): Promise<number> {\r\n  let account = await this.getAccount();\r\n  \r\n  return new Promise((resolve, reject) => {\r\n    let _web3 = this._web3;\r\n    this._tokenContract.getbalance({from:account,gas: 600000},function (err, result) {\r\n      if(err != null) {\r\n       console.log(err);\r\n        resolve(0);\r\n      }\r\n       resolve(result);\r\n   });\r\n  }) as Promise<number>;\r\n  }\r\n\r\n\r\n\r\n//checkBalance\r\npublic async check_balance(): Promise<number> {\r\n  let account = await this.getAccount();\r\n  \r\n  return new Promise((resolve, reject) => {\r\n    let _web3 = this._web3;\r\n    this._tokenContract.check_balance({from:account,gas: 600000},function (err, result) {\r\n      if(err != null) {\r\n       console.log(err);\r\n        resolve(0);\r\n      }\r\n       resolve(result);\r\n   });\r\n  }) as Promise<number>;\r\n  }\r\n//checking admin\r\npublic async check_admin(): Promise<boolean> {                                      \r\nlet account:string = '';\r\nlet accounts = await this.getAccount();\r\nlet meta = this;\r\n//let key_admin:boolean =false;\r\nawait this.getAccount().then(address => this.account = address);  \r\nreturn new Promise((resolve, reject) => {\r\nthis._tokenContract.owner({from:account,gas: 600000},function(err,result) {\r\n  if(err != null) {\r\n    console.log(\"error\");\r\n    reject(err);\r\n  }\r\n  else{\r\n  if (result === accounts)\r\n  {\r\n    //key_admin = true;\r\n    console.log(\"if works\");    \r\n  }}\r\n  //console.log(key_admin);\r\n  //console.log(this.address);\r\n  console.log(\"testing\",result == accounts);\r\n  \r\n  console.log(accounts);\r\n  \r\n  //console.log(this.account);\r\n  \r\n  resolve(result == accounts);\r\n});\r\n}) as Promise<boolean>;\r\n\r\n}\r\n\r\n//hash function\r\npublic async hash(a): Promise<string> {\r\nlet meta = this;\r\nreturn new Promise((resolve, reject) => {\r\n\r\n  var accountInterval = setInterval(function()\r\n  {\r\n    meta._web3.eth.getTransactionReceipt(a,function(err,result){\r\n      if(err != null) {\r\n      reject(err);\r\n      }\r\n\r\n      if(result !== null)\r\n      {\r\n        clearInterval(accountInterval);\r\n        if(result.status == 0x1)\r\n        {\r\n          resolve(\"Success\");          \r\n        }\r\n        else\r\n        {\r\n          resolve(\"Transaction Failed\");\r\n        }\r\n        \r\n      }\r\n      \r\n    })\r\n  },100)\r\n}) as Promise<string>;\r\n}\r\n  \r\n}\r\n","module.exports = \"<div class=\\\"container-fluid\\\" style=\\\"margin-top: 100px; \\\">\\n<div class=\\\"row\\\">\\n        <div class=\\\"col-sm-4\\\">\\n            <label><b>ID:&nbsp;&nbsp;</b></label>\\n                <input #sortlist type=\\\"text\\\" placeholder=\\\"Enter ID\\\"><br><br>\\n                <label><b>Select option:&nbsp;&nbsp;</b></label>\\n                <select #options>\\n                    <option value=\\\"0\\\">OrderID</option>\\n                    <!-- <option value=\\\"1\\\">CustomerID</option>     -->\\n                    <option value=\\\"2\\\">ProductID</option>\\n                \\n                </select><br><br>\\n                <input type=\\\"submit\\\" class=\\\"btn btn-default\\\" (click)=\\\"sortlisting(sortlist.value,options.value);\\\"> \\n            </div>\\n            <div class=\\\"col-sm-8\\\">\\n <!-- sortlist table -->\\n    \\n <table class=\\\"table\\\" style=\\\"height:550px;width:950px;overflow-y:auto;display:block;\\\">\\n    \\n        <!--Table head-->\\n        <thead class=\\\"mdb-color darken-3\\\">\\n            <tr class=\\\"text-white\\\">\\n                <th>Order Id</th>\\n                <th>Customer Id</th>\\n                <th>Productid</th>\\n                <th>product name</th>\\n                <th>Quantity</th>\\n                <th> Price</th>\\n                <th>Date</th>\\n                <th>Status</th>\\n             \\n            </tr>\\n        </thead>\\n        <!--Table head-->\\n      \\n        <!--Table body-->\\n        <tbody>\\n            <tr *ngFor=\\\"let sorting of sort;\\\">\\n                <td >{{sorting.oid}}</td>\\n                <td >{{sorting.cusid}}</td>\\n                <td >{{sorting.pid}} </td>\\n                <td >{{sorting.pname}} </td>\\n                <td>{{sorting.totalquantity}}</td>\\n                <td>{{sorting.totalprice}}</td>\\n                <td>{{sorting.dateVal | date:'d/M/y'}} </td>\\n                <td>{{sorting.Status}}</td>\\n            </tr>   \\n        </tbody>\\n        <!--Table body-->\\n      </table>\\n                </div>\\n</div> \\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Web3servicesService } from '../services/web3services.service';\nimport { Router } from '@angular/router';\n\ndeclare let window: any;\nimport * as Web3 from 'web3';\n@Component({\n  selector: 'app-sort',\n  templateUrl: './sort.component.html',\n  styleUrls: ['./sort.component.scss']\n})\nexport class SortComponent implements OnInit {\n  public details=[];\n  public sort=[];\n  public  _web3: any;\n  public id1: any;\n  public id2: any;\n  public account:string;\n  public balance:number;\n  public totalproductsale: number=0;\n  public totalamount: number=0;\n\n  constructor(private web3Service:Web3servicesService,private router:Router) { }\n\n  ngOnInit() {\n  }\n  //sortlist table\nsortlisting(sortlist,options){\n  this.sort= [0];\n  if(options == 0){\n    this.web3Service.getCustomerCount().then(order=>{\n      order.forEach(element => {\n          this.web3Service.ViewCustomer(element).then(obj=>{\n             if(sortlist == obj[0]){\n              \n               if(obj[8]==1){\n                 var f=\"ORDERED\";\n                 var tot\n                //  alert(obj[5]);\n                //  this.totalproductsale=this.totalproductsale+obj[5];\n                //  alert(this.totalproductsale)\n                //  this.totalamount=+parseInt(obj[6]);\n               }\n               else{\n                 var f=\"CANCELLED\"           \n               }\n    \n            \n  \n               if(obj[3]!=\"\"){\n                \n               }\n  \n               this.sort.push({\"oid\":obj[0],\"pid\":obj[1],\"cusid\":obj[2],\"pname\":obj[3],\"totalprice\": obj[6],\"totalquantity\":obj[5],\"dateVal\":obj[7],\"Status\":f});     \n             }//if\n            //  else {\n            //    alert(\"can't find records for this duration\");\n            //  }\n     \n         })    \n         \n      });\n      \n    })\n\n  }//if\n  else if(options == 1){\n    this.sort= [0];\n    this.web3Service.getCustomerCount().then(order=>{\n      order.forEach(element => {\n          this.web3Service.ViewCustomer(element).then(obj=>{\n             if(sortlist==obj[2]){\n               if(obj[8]==1){\n                 var f=\"ORDERED\";\n                 var tot\n                //  alert(obj[5]);\n                //  this.totalproductsale=this.totalproductsale+obj[5];\n                //  alert(this.totalproductsale)\n                //  this.totalamount=+parseInt(obj[6]);\n               }\n               else{\n                 var f=\"CANCELLED\"           \n               }\n    \n            \n  \n               if(obj[3]!=\"\"){\n                \n               }\n  \n               this.sort.push({\"oid\":obj[0],\"pid\":obj[1],\"cusid\":obj[2],\"pname\":obj[3],\"totalprice\": obj[6],\"totalquantity\":obj[5],\"dateVal\":obj[7],\"Status\":f});     \n             }//if\n            //  else {\n            //    alert(\"can't find records for this duration\");\n            //  }\n     \n         })    \n         \n      });\n      \n    })\n\n  }//elseif 1\n  else if(options == 2){\n    this.sort= [0];\n    this.web3Service.getCustomerCount().then(order=>{\n      order.forEach(element => {\n          this.web3Service.ViewCustomer(element).then(obj=>{\n             if(sortlist == obj[1]){\n               if(obj[8]==1){\n                 var f=\"ORDERED\";\n                 var tot\n                //  alert(obj[5]);\n                //  this.totalproductsale=this.totalproductsale+obj[5];\n                //  alert(this.totalproductsale)\n                //  this.totalamount=+parseInt(obj[6]);\n               }\n               else{\n                 var f=\"CANCELLED\"           \n               }\n    \n            \n  \n               if(obj[3]!=\"\"){\n                \n               }\n  \n               this.sort.push({\"oid\":obj[0],\"pid\":obj[1],\"cusid\":obj[2],\"pname\":obj[3],\"totalprice\": obj[6],\"totalquantity\":obj[5],\"dateVal\":obj[7],\"Status\":f});     \n             }//if\n            //  else {\n            //    alert(\"can't find records for this duration\");\n            //  }\n     \n         })    \n         \n      });\n      \n    })\n  }//elseif2\n\n}\n\n}\n","module.exports = \"\\r\\n<main>\\r\\n        <!-- <div class=\\\"container-fluid\\\" style=\\\"margin-top: 100px; \\\">\\r\\n      \\r\\n            <div class=\\\"row col text-center\\\">\\r\\n      \\r\\n      \\r\\n                <div class=\\\"col-sm-12\\\" >\\r\\n                    <div>\\r\\n                        <h5><b>List of Products in Stock</b></h5>\\r\\n                        <br>\\r\\n                    </div> -->\\r\\n      \\r\\n      \\r\\n    <div class=\\\"container\\\" style=\\\"margin-top: 100px; \\\">\\r\\n           \\r\\n      <!-- <div class=\\\"ScrollStyle\\\"> -->\\r\\n      <!--Table-->\\r\\n      <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-3\\\"></div>\\r\\n      <div class=\\\"col-sm-9\\\">\\r\\n            <h5><b>List of Products in Stock</b></h5><br>\\r\\n            <table class=\\\"table\\\" style=\\\"height:550px;width:600px;overflow-y:auto;display:block;\\\">\\r\\n\\r\\n                    <!--Table head-->\\r\\n        \\r\\n                    \\r\\n        \\r\\n                    <thead class=\\\"mdb-color darken-3\\\" >\\r\\n                            <tr class=\\\"text-white\\\">\\r\\n                  \\r\\n                                    <th>Product Id</th>\\r\\n                                    <th>Product Name</th>\\r\\n                                    <th>Brand Name</th>\\r\\n                                    <th>Quantity</th>\\r\\n                                    <th>Price per Quantity </th>\\r\\n                                    <th>Stocked Date</th>\\r\\n                        \\r\\n                              </tr>\\r\\n                    </thead>\\r\\n                    <!--Table head-->  \\r\\n                    <!--Table body-->\\r\\n                    <tbody>\\r\\n                            <tr *ngFor=\\\"let product of details;\\\">\\r\\n                                    <td >{{product.pid}}</td>\\r\\n                                    <td >{{product.pname}} </td>\\r\\n                                    <td>{{product.brand}}</td>\\r\\n                                    <td>{{product.quantity}}</td>\\r\\n                                    <td>{{product.price}}</td>\\r\\n                                    <td>{{product.dateVal | date: 'd/M/y' }}</td>\\r\\n                                </tr>\\r\\n                    </tbody>\\r\\n                    <!--Table body-->\\r\\n                  </table> \\r\\n      </div>\\r\\n    \\r\\n    </div>\\r\\n    \\r\\n        <!-- </div> -->\\r\\n      <!--Table-->\\r\\n\\r\\n     \\r\\n\\r\\n      </div>\\r\\n                <!-- </div>\\r\\n              </div>\\r\\n            </div> -->\\r\\n      \\r\\n      </main>\\r\\n      \"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { Web3servicesService } from '../services/web3services.service';\r\nimport { Router } from '@angular/router';\r\n\r\ndeclare let window: any;\r\nimport * as Web3 from 'web3';\r\n\r\n@Component({\r\n  selector: 'app-stockproduct',\r\n  templateUrl: './stockproduct.component.html',\r\n  styleUrls: ['./stockproduct.component.scss']\r\n})\r\nexport class StockproductComponent implements OnInit {\r\n  public details=[];\r\n  public pid: number;\r\n  public pname: string;\r\n  public pbrand: string;\r\n  public quantity: number;\r\n  public price: number;\r\n  public  _web3: any;\r\n  public id1: any;\r\n  public id2: any;\r\n  public account:string;\r\n  public balance:number;\r\n\r\n  constructor(private pro:Web3servicesService,private router:Router) { \r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    //product in stock\r\n    this.pro.getproductCount().then(product=>{\r\n      product.forEach(element => {\r\n        console.log(element);\r\n        \r\n        this.pro.ViewProduct(element).then(obj=>{\r\n          console.log(obj);\r\n          if(obj[1]!=\"\")\r\n          {\r\n           if(obj[3]!=0){\r\n            obj[4]=obj[4]/100;\r\n            this.details.push({\"pid\":obj[0],\"pname\":obj[1],\"brand\":obj[2],\"quantity\":obj[3],\"price\":obj[4],\"dateVal\":obj[5]});\r\n\r\n           }\r\n         }\r\n        })\r\n        \r\n      });\r\n    })\r\n\r\n    //product out of stock\r\n   \r\n\r\n\r\n    let meta = this;\r\n      //  meta.alltablework();\r\n        meta.pro.getUserBalance().then(balance => meta.balance = balance);\r\n        meta.pro.getAccount().then(acc => {\r\n            this.account = acc;\r\n            meta.id1 = setInterval(function() {\r\n             if (typeof window.web3 !== 'undefined') {\r\n                 meta._web3 = new Web3(window.web3.currentProvider);\r\n                 if (meta._web3.eth.accounts[0] !== meta.account) {\r\n                     meta.account = meta._web3.eth.accounts[0];\r\n                     if (meta._web3.eth.accounts[0] === undefined) {\r\n                         meta.router.navigate(['metamask']);\r\n                         clearInterval(this.interval);\r\n                     } else {\r\n                       //  alert('Address Change Detected Please Refresh Page');\r\n                     }\r\n                 }\r\n             } else {\r\n                 meta.router.navigate(['metamask']);\r\n             }\r\n            }, 200);\r\n         });\r\n  \r\n         meta.id2 = setInterval(function() {\r\n          meta.pro.getUserBalance().then(balance => this.balance = balance);\r\n          meta.pro.getAccount().then(account => this.balance = account);\r\n        //  meta.alltablework();\r\n      }, 20000);\r\n    \r\n  }\r\n\r\n}\r\n\r\n","module.exports = \"<div class=\\\"col-sm-4\\\"></div>\\r\\n\\r\\n  <div class=\\\"container\\\" style=\\\"margin-top: 100px; \\\">\\r\\n\\r\\n          <div class=\\\"col-sm-4\\\">\\r\\n              <form class=\\\"form-horizontal\\\" [formGroup]=\\\"angForm\\\" novalidate >\\r\\n                <div>\\r\\n                 <h4><b>Transfer Ownership</b></h4>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"address\\\">Address<font color=\\\"red\\\">*</font></label>\\r\\n                  <div >\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"address\\\" [(ngModel)]=\\\"address\\\" formControlName=\\\"address\\\" placeholder=\\\"Enter recipient Address\\\">\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\r\\n                    <div *ngIf=\\\"angForm.controls['address'].valid \\\">\\r\\n                      <button type=\\\"submit\\\" (click)=\\\"transfer();\\\" class=\\\"btn btn-default\\\">Transfer</button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </form>\\r\\n          </div>\\r\\n        </div>\\r\\n<div  class=\\\"col-sm-4\\\">\\r\\n     <ngx-spinner  bdColor=\\\"rgba(51,51,51,0.8)\\\"\\r\\nsize=\\\"medium\\\"\\r\\ncolor=\\\"#fff\\\"\\r\\nloadingText=\\\"Loading...\\\"\\r\\ntype=\\\"ball-scale-multiple\\\"></ngx-spinner>\\r\\n    \\r\\n\\r\\n\\r\\n</div>\\r\\n       \\r\\n     \\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { Web3servicesService } from '../services/web3services.service';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport swal from 'sweetalert';\r\nimport { FormBuilder, Validators ,FormGroup,FormControl} from '@angular/forms';\r\n\r\ndeclare let window: any;\r\nimport * as Web3 from 'web3';\r\n\r\n@Component({\r\n  selector: 'app-transferownership',\r\n  templateUrl: './transferownership.component.html',\r\n  styleUrls: ['./transferownership.component.scss']\r\n})\r\nexport class TransferownershipComponent implements OnInit {\r\n  public address:string; \r\n  public  _web3: any;\r\n  public id1: any;\r\n  public id2: any;\r\n  public account:string;\r\n  public balance:number;\r\n  angForm: FormGroup;\r\n\r\n  constructor(public pro: Web3servicesService,private router:Router,private spinner: NgxSpinnerService,private fb: FormBuilder) {\r\n    this.createForm();\r\n   }\r\n\r\n  ngOnInit() {\r\n    let meta = this;\r\n      //  meta.alltablework();\r\n        meta.pro.getUserBalance().then(balance => meta.balance = balance);\r\n        meta.pro.getAccount().then(acc => {\r\n            this.account = acc;\r\n            meta.id1 = setInterval(function() {\r\n             if (typeof window.web3 !== 'undefined') {\r\n                 meta._web3 = new Web3(window.web3.currentProvider);\r\n                 if (meta._web3.eth.accounts[0] !== meta.account) {\r\n                     meta.account = meta._web3.eth.accounts[0];\r\n                     if (meta._web3.eth.accounts[0] === undefined) {\r\n                         meta.router.navigate(['metamask']);\r\n                         clearInterval(this.interval);\r\n                     } else {\r\n                        // alert('Address Change Detected Please Refresh Page');\r\n                     }\r\n                 }\r\n             } else {\r\n                 meta.router.navigate(['metamask']);\r\n             }\r\n            }, 200);\r\n         });\r\n  \r\n         meta.id2 = setInterval(function() {\r\n          meta.pro.getUserBalance().then(balance => this.balance = balance);\r\n          meta.pro.getAccount().then(account => this.balance = account);\r\n        //  meta.alltablework();\r\n      }, 20000);\r\n    \r\n  }\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n       address: ['', Validators.required ],\r\n    });\r\n  }\r\n  transfer(){\r\n    let meta=this;\r\n    console.log(this.address);\r\n    meta.spinner.show();\r\n    meta.pro.TransferownerShip(this.address).then(res=>{\r\n      if(res==0){\r\n        this.spinner.hide();\r\n        swal(\"operation rejected\");\r\n        this.address=\"\";\r\n    }\r\n    else{ \r\n        meta.pro.hash(res).then(result=>{\r\n          this.spinner.hide(); \r\n          swal(result); \r\n          this.address=\"\";\r\n          window.location.reload();             \r\n       })\r\n    }\r\n     })\r\n  }\r\n}\r\n\r\n","module.exports = \"\\r\\n<main>\\r\\n  <div class=\\\"container-fluid\\\" style=\\\"margin-top: 100px; \\\">\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-2\\\" >\\r\\n              <form class=\\\"form-horizontal\\\" [formGroup]=\\\"angForm\\\" novalidate >\\r\\n                <div>\\r\\n                 <h5><b>Update Product Details</b></h5>\\r\\n                </div>\\r\\n                <div >\\r\\n                        <div class=\\\"col-sm-6\\\">\\r\\n                          <input type=\\\"text\\\" placeholder=\\\"Enter Product Id\\\" #proid>\\r\\n                        </div>\\r\\n                        <br>\\r\\n                        <div class=\\\"col-sm-6\\\">\\r\\n                                <input type=\\\"button\\\" class=\\\"btn btn-default\\\" value=\\\"View Detail\\\" (click)=\\\"show(proid.value)\\\">\\r\\n                              </div>\\r\\n\\r\\n                      </div>\\r\\n                      <br>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label class=\\\"control-label col-sm-4\\\" for=\\\"productid\\\">Product Id<font color=\\\"red\\\">*</font></label>\\r\\n                  <div class=\\\"col-sm-6\\\">\\r\\n                    <input type=\\\"number\\\" class=\\\"form-control\\\" min=\\\"0\\\" name=\\\"productid\\\" [(ngModel)]=\\\"productid\\\"  formControlName=\\\"productid\\\" [value]=\\\"productid\\\"  (focus)=\\\"check()\\\" (focusout)=\\\"checkOut()\\\" placeholder=\\\"Enter Product Id\\\">\\r\\n                  </div>\\r\\n                </div>\\r\\n               \\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"control-label col-sm-4\\\" for=\\\"quantity\\\">No.of.Quantity<font color=\\\"red\\\">*</font></label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <input type=\\\"number\\\" class=\\\"form-control\\\" min=\\\"0\\\" name=\\\"quantity\\\" [(ngModel)]=\\\"quantity\\\" formControlName=\\\"quantity\\\" [value]=\\\"quantity\\\"  placeholder=\\\"Enter Quantity\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"control-label col-sm-5\\\" for=\\\"price\\\">Price Per Quantity<font color=\\\"red\\\">*</font></label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <input type=\\\"number\\\" class=\\\"form-control\\\" min=\\\"0\\\" name=\\\"price\\\" [(ngModel)]=\\\"price\\\" formControlName=\\\"price\\\" [value]=\\\"price\\\" placeholder=\\\"Enter  Price\\\">\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\r\\n                     <div *ngIf=\\\"angForm.controls['productid'].valid\\\" >\\r\\n                          <div *ngIf=\\\"angForm.controls['quantity'].valid || angForm.controls['price'].valid\\\"> \\r\\n                              <!-- <div *ngIf=\\\"angForm.controls['price'].valid\\\"> -->\\r\\n                                  <button type=\\\"submit\\\" (click)=\\\"Product();\\\" class=\\\"btn btn-success\\\">Update</button>\\r\\n                              <!-- </div> -->\\r\\n                          </div>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </form>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-5\\\">\\r\\n                <div>\\r\\n                        <h5><b>Details of the Product</b></h5>\\r\\n                    </div>\\r\\n      \\r\\n      \\r\\n    <div class=\\\"ScrollStyle\\\">      <!--Table-->\\r\\n      <table class=\\\"table\\\">\\r\\n      \\r\\n        <!--Table head-->\\r\\n        <thead style=\\\"background-color:green\\\">\\r\\n            <tr class=\\\"text-white\\\">\\r\\n               \\r\\n                <th>Product Id</th>\\r\\n                <th>Product Name</th>\\r\\n                <th>Brand Name</th>\\r\\n                <th>Quantity</th>\\r\\n                <th>Price per Quantity </th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <!--Table head-->\\r\\n      \\r\\n        <!--Table body-->\\r\\n        <tbody>\\r\\n            <tr *ngFor=\\\"let i of view;\\\">\\r\\n                <td >{{i.pid}}</td>\\r\\n                <td >{{i.pname}}</td>\\r\\n                <td >{{i.brand}}</td>\\r\\n                <td>{{i.quantity}}</td>\\r\\n                <td>{{i.price}}</td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n        <!--Table body-->\\r\\n      </table>\\r\\n      <!--Table-->\\r\\n      </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-5\\\" >\\r\\n              <div>\\r\\n                  <h5><b>Out Of Stock Product Details</b></h5>\\r\\n              </div>\\r\\n\\r\\n\\r\\n<div class=\\\"ScrollStyle\\\">\\r\\n<!--Table-->\\r\\n<table class=\\\"table\\\">\\r\\n\\r\\n  <!--Table head-->\\r\\n  <thead style=\\\"background-color:red\\\">\\r\\n      <tr class=\\\"text-white\\\">\\r\\n         \\r\\n            <th>Product Id</th>\\r\\n            <th>Product Name</th>\\r\\n            <th>Brand Name</th>\\r\\n            <th>Quantity</th>\\r\\n            <th>Price per Quantity </th>\\r\\n      </tr>\\r\\n  </thead>\\r\\n  <!--Table head-->\\r\\n\\r\\n  <!--Table body-->\\r\\n  <tbody>\\r\\n      <tr *ngFor=\\\"let update of details;\\\">\\r\\n          <td >{{update.pid}}</td>\\r\\n          <td >{{update.pname}}</td>\\r\\n          <td >{{update.brand}}</td>\\r\\n          <td>{{update.quantity}}</td>\\r\\n          <td>{{update.price}}</td>\\r\\n      </tr>\\r\\n  </tbody>\\r\\n  <!--Table body-->\\r\\n</table>\\r\\n<!--Table-->\\r\\n</div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n</main>\\r\\n<ngx-spinner  bdColor=\\\"rgba(51,51,51,0.8)\\\"\\r\\nsize=\\\"medium\\\"\\r\\ncolor=\\\"#fff\\\"\\r\\nloadingText=\\\"Loading...\\\"\\r\\ntype=\\\"ball-scale-multiple\\\"></ngx-spinner>\\r\\n\"","module.exports = \".ScrollStyle {\\n  max-height: 250px;\\n  overflow-y: scroll; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Web3servicesService } from '../services/web3services.service';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\r\n\r\ndeclare let window: any;\r\nimport * as Web3 from 'web3';\r\n\r\n@Component({\r\n  selector: 'app-updateproduct',\r\n  templateUrl: './updateproduct.component.html',\r\n  styleUrls: ['./updateproduct.component.scss']\r\n})\r\nexport class UpdateproductComponent implements OnInit {\r\n\r\n  public productid;\r\n  public quantity;\r\n  public price;\r\n  public details=[];\r\n  public view=[];\r\n\r\n  public  _web3: any;\r\n  public id1: any;\r\n  public id2: any;\r\n  public account:string;\r\n  public balance:number;\r\n  public id=[];\r\n   angForm: FormGroup;\r\n\r\n  constructor(public pro: Web3servicesService,private router:Router,private spinner: NgxSpinnerService,private fb: FormBuilder) { \r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.pro.getproductCount().then(product=>{\r\n      product.forEach(element => {\r\n       // console.log(element);\r\n        \r\n        this.pro.ViewProduct(element).then(obj=>{\r\n         // console.log(obj);\r\n          if(obj[3]==0 && obj[1]!=\"\")\r\n          {\r\n            obj[4]=obj[4]/100;\r\n            this.details.push({\"pid\":obj[0],\"pname\":obj[1],\"brand\":obj[2],\"quantity\":obj[3],\"price\":obj[4]});\r\n          }\r\n        })\r\n        \r\n      });\r\n    })\r\n    let meta = this;\r\n    //  meta.alltablework();\r\n      meta.pro.getUserBalance().then(balance => meta.balance = balance);\r\n      meta.pro.getAccount().then(acc => {\r\n          this.account = acc;\r\n          meta.id1 = setInterval(function() {\r\n           if (typeof window.web3 !== 'undefined') {\r\n               meta._web3 = new Web3(window.web3.currentProvider);\r\n               if (meta._web3.eth.accounts[0] !== meta.account) {\r\n                   meta.account = meta._web3.eth.accounts[0];\r\n                   if (meta._web3.eth.accounts[0] === undefined) {\r\n                       meta.router.navigate(['metamask']);\r\n                       clearInterval(this.interval);\r\n                   } else {\r\n                     //  alert('Address Change Detected Please Refresh Page');\r\n                   }\r\n               }\r\n           } else {\r\n               meta.router.navigate(['metamask']);\r\n           }\r\n          }, 200);\r\n       });\r\n\r\n       meta.id2 = setInterval(function() {\r\n        meta.pro.getUserBalance().then(balance => this.balance = balance);\r\n        meta.pro.getAccount().then(account => this.balance = account);\r\n      //  meta.alltablework();\r\n    }, 20000);\r\n  }\r\n\r\n  show(proid)\r\n  {\r\n    this.view.length=0;\r\n    this.pro.ViewProduct(proid).then(obj =>{\r\n      this.view.push({\"pid\":obj[0],\"pname\":obj[1],\"brand\":obj[2],\"quantity\":obj[3],\"price\":Number(obj[4])/100});\r\n\r\n    })\r\n  }\r\n\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n       productid: ['', Validators.required ],\r\n       quantity: ['', Validators.required ],\r\n       price: ['', Validators.required ]\r\n    });\r\n  }\r\n\r\n  check(){\r\n     this.pro.ViewProduct(this.productid).then(res=>{\r\n           if(res[0]== this.productid){\r\n            \r\n           }\r\n           \r\n     })\r\n  }\r\n  checkOut(){\r\n    this.pro.ViewProduct(this.productid).then(res=>{\r\n          if(res[0]== this.productid){\r\n            //swal(\"valid\");\r\n          }\r\n          else{\r\n             swal(\"Invalid Product Id \");\r\n          }\r\n    })\r\n }\r\n\r\n  Product(){\r\n    let meta=this;\r\n    this.price=this.price*100;\r\n    meta.spinner.show();\r\n    meta.pro.update_product(this.productid,this.quantity,this.price).then(res=>{\r\n      if(res==0){\r\n        this.spinner.hide();\r\n        swal(\"operation rejected\");\r\n        this.productid= \"\";\r\n        this.quantity=\"\";\r\n        this.price=\"\";\r\n        // window.location.reload();\r\n    }\r\n    else{ \r\n        meta.pro.hash(res).then(result=>{\r\n          this.spinner.hide(); \r\n          swal(result);\r\n          this.productid= \"\";\r\n          this.quantity=\"\";\r\n          this.price=\"\";\r\n\r\n          // window.location.reload();           \r\n       })\r\n    }   \r\n     })\r\n  }\r\n}\r\n  \r\n\r\n\r\n\r\n","module.exports = \"<div class=\\\"container-fluid\\\" style=\\\"margin-top: 100px; \\\">\\n    <!-- <div>\\n        <h5>View Customer  Order Details</h5>\\n        <br>\\n    </div> -->\\n    <div class=\\\"row\\\">\\n<div class=\\\"col-sm-4\\\">\\n        <label >Start date:</label>\\n        <input #datest type=\\\"datetime-local\\\"><br><br>\\n        <label >End date:</label>\\n        <input #dateend type=\\\"datetime-local\\\"><br><br>\\n        <input type=\\\"submit\\\" class=\\\"btn btn-default\\\" (click)=\\\"date_view_details(datest.value,dateend.value);\\\">\\n        <br><br><p>Total saled product ({{ totalproductsale }})</p>\\n        <p>Total price ({{ totalamount }})</p><br><br>\\n</div>\\n<div class=\\\"col-sm-8\\\">\\n<!--Table-->\\n\\n<table class=\\\"table\\\" style=\\\"height:550px;width:1000px;overflow-y:auto;display:block;\\\">\\n\\n        <!--Table head-->\\n        <thead class=\\\"mdb-color darken-3\\\">\\n        <tr class=\\\"text-white\\\">\\n        <th>Order Id</th>\\n        <th>Customer Id</th>\\n        <th>Productid</th>\\n        <th>product name</th>\\n        <th>Quantity</th>\\n        <th> Price</th>\\n        <th>Date</th>\\n        <th>Status</th>\\n        \\n        </tr>\\n        </thead>\\n        <!--Table head-->\\n        \\n        <!--Table body-->\\n        <tbody>\\n        <tr *ngFor=\\\"let order of details;\\\">\\n        <td >{{order.oid}}</td>\\n        <td >{{order.cusid}}</td>\\n        <td >{{order.pid}} </td>\\n        <td >{{order.pname}} </td>\\n        <td>{{order.totalquantity}}</td>\\n        <td>{{order.totalprice}}</td>\\n        <td>{{order.dateVal | date:'d/M/y'}} </td>\\n        <td>{{order.Status}}</td>\\n        </tr>   \\n        </tbody>\\n        <!--Table body-->\\n        </table>\\n</div>\\n\\n\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Web3servicesService } from '../services/web3services.service';\nimport { Router } from '@angular/router';\n\ndeclare let window: any;\nimport * as Web3 from 'web3';\n\n\n@Component({\n  selector: 'app-view',\n  templateUrl: './view.component.html',\n  styleUrls: ['./view.component.scss']\n})\nexport class ViewComponent implements OnInit {\n  public details=[];\n  public sort=[];\n  public  _web3: any;\n  public id1: any;\n  public id2: any;\n  public account:string;\n  public balance:number;\n  public totalproductsale: any;\n  public totalamount: any;\n\n  constructor(private web3Service:Web3servicesService,private router:Router){ }\nngOnInit(){\n  let meta = this;\n  //  meta.alltablework();\n    meta.web3Service.getUserBalance().then(balance => meta.balance = balance);\n    meta.web3Service.getAccount().then(acc => {\n        this.account = acc;\n        meta.id1 = setInterval(function() {\n         if (typeof window.web3 !== 'undefined') {\n             meta._web3 = new Web3(window.web3.currentProvider);\n             if (meta._web3.eth.accounts[0] !== meta.account) {\n                 meta.account = meta._web3.eth.accounts[0];\n                 if (meta._web3.eth.accounts[0] === undefined) {\n                     meta.router.navigate(['metamask']);\n                     clearInterval(this.interval);\n                 } else {\n                    // alert('Address Change Detected Please Refresh Page');\n                   // window.location.reload();\n                 }\n             }\n         } else {\n             meta.router.navigate(['metamask']);\n         }\n        }, 200);\n     });\n\n     meta.id2 = setInterval(function() {\n      meta.web3Service.getUserBalance().then(balance => this.balance = balance);\n      meta.web3Service.getAccount().then(account => this.balance = account);\n    //  meta.alltablework();\n  }, 20000);\n}\n\n//report table\n\ndate_view_details(datest,dateend){\n\nvar a :any =datest;\nvar b :any=new Date(a);\nvar c:number =Math.round(b);\nvar d:any =c/1000.0;\nvar date1:number=parseInt(d);\n\nvar a :any = dateend;\nvar b :any=new Date(a);\nvar c:number =Math.round(b);\nvar d:any =c/1000.0;\nvar date2:number=parseInt(d);\n// alert( date1);\n// alert( date2);\nthis.web3Service.getCustomerCount().then(order=>{\nthis.details=[0];\nthis.totalproductsale=0;\nthis.totalamount=0;\nvar tofprice;\nvar tofquantity;\n\norder.forEach(element => {\n    this.web3Service.ViewCustomer(element).then(obj=>{\n      var a :any =obj[7];\n      var b :any=new Date(a);\n      var c:number =Math.round(b);\n      var d:any =c/1000.0;\n      var dt:number=parseInt(d);\n      // alert(dt);\n       if( date1 <= dt &&  date2 >= dt){\n        \n         if(obj[8]==1){\n           var f=\"ORDERED\";\n          var t = parseInt(this.totalproductsale)\n           this.totalproductsale=t+parseInt(obj[5]);\n     var g=this.totalamount;\n           this.totalamount = parseFloat(g)+parseFloat(obj[6]);\n          //  alert(g+obj[6]);\n         }\n         else{\n           var f=\"CANCELLED\"          \n         \n         }\n\n      \n\n         if(obj[3]!=\"\"){\n          \n         }\n\n         this.details.push({\"oid\":obj[0],\"pid\":obj[1],\"cusid\":obj[2],\"pname\":obj[3],\"totalprice\": obj[6],\"totalquantity\":obj[5],\"dateVal\":obj[7],\"Status\":f});     \n       }//if\n      //  else {\n      //    alert(\"can't find records for this duration\");\n      //  }\n\n   })    \n   \n});\n\n})\n\n}\n\n}\n","module.exports = \"\\r\\n<main>\\r\\n        <!-- <div class=\\\"container\\\" style=\\\"margin-top: 100px; \\\">\\r\\n      \\r\\n            <div class=\\\"row col text-center\\\">\\r\\n      \\r\\n      \\r\\n                <div class=\\\"col-sm-12\\\" >\\r\\n                    <div>\\r\\n                        <h5><b>View Total Purchase History</b></h5>\\r\\n                        <br>\\r\\n                    </div> -->\\r\\n      \\r\\n      \\r\\n      <div class=\\\"container\\\" style=\\\"margin-top: 100px; \\\">\\r\\n            <div>\\r\\n                    <h5><b>View Total Purchase History</b></h5>\\r\\n                    <br>\\r\\n                </div>\\r\\n      <!-- <div class=\\\"ScrollStyle\\\"> -->\\r\\n      <!--Table-->\\r\\n      <table class=\\\"table\\\" style=\\\"background:white;height:550px;width:1230px;overflow-y:auto;display:block;\\\">\\r\\n\\r\\n            <!--Table head-->\\r\\n            <thead class=\\\"mdb-color pink\\\">\\r\\n                  \\r\\n      \\r\\n                            <tr class=\\\"text-white\\\">\\r\\n                                    <th>Order Id</th>\\r\\n                                    <th>Customer Id</th>\\r\\n                                    <th>Product Id</th>\\r\\n                                    <th>Product Name</th>\\r\\n                                    <th> Quantity</th>\\r\\n                                    <th>Total Price (in ether)</th>\\r\\n                                    <th>Date</th>\\r\\n                                    <th>Status</th>\\r\\n                                </tr>\\r\\n    \\r\\n            </thead>\\r\\n            <!--Table head-->  \\r\\n            <!--Table body-->\\r\\n            <tbody>\\r\\n                    <tr *ngFor=\\\"let order of details;\\\"  [ngSwitch]=\\\"order.status\\\">\\r\\n                            <td >{{order.oid}}</td>\\r\\n                            <td >{{order.cusid}}</td>\\r\\n                            <td >{{order.pid}} </td>\\r\\n                            <td >{{order.pname}} </td>\\r\\n                            <td>{{order.quantity}}</td>\\r\\n                            <td>{{order.price}}</td>\\r\\n                            <td>{{order.dateVal | date:'d/M/y'}}</td>\\r\\n                            <td *ngSwitchCase=\\\"true\\\" style=\\\"color:green\\\"><b>ORDERED</b></td>\\r\\n                            <td *ngSwitchCase=\\\"false\\\" style=\\\"color:red\\\"><b>CANCELLED</b></td>\\r\\n                        </tr>   \\r\\n            </tbody>\\r\\n            <!--Table body-->\\r\\n          </table>\\r\\n        <!-- </div> -->\\r\\n      <!--Table-->\\r\\n      \\r\\n                <!-- </div>\\r\\n              </div>\\r\\n            </div> -->\\r\\n        </div>\\r\\n      </main>\\r\\n      \\r\\n\\r\\n\\r\\n\\r\\n\"","module.exports = \"mdb-color pink {\\n  background-color: #e91e63; }\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Web3servicesService } from '../services/web3services.service';\r\nimport { Router } from '@angular/router';\r\n\r\ndeclare let window: any;\r\nimport * as Web3 from 'web3';\r\n\r\n\r\n@Component({\r\n  selector: 'app-viewcus-order',\r\n  templateUrl: './viewcus-order.component.html',\r\n  styleUrls: ['./viewcus-order.component.scss']\r\n})\r\nexport class ViewcusOrderComponent implements OnInit {\r\n  public details=[];\r\n  public  _web3: any;\r\n  public id1: any;\r\n  public id2: any;\r\n  public account:string;\r\n  public balance:number;\r\n\r\n\r\n  constructor(private web3Service:Web3servicesService,private router:Router) { }\r\n\r\n  ngOnInit() {\r\n     this.web3Service.getCustomerCount().then(order=>{\r\n       order.forEach(element => {\r\n           this.web3Service.ViewCustomer(element).then(obj=>{\r\n             if(obj[8]==1){\r\n               var a=true\r\n             }\r\n             else{\r\n               var a=false\r\n             }\r\n            if(obj[3]!=\"\"){\r\n              this.details.push({\"oid\":obj[0],\"pid\":obj[1],\"cusid\":obj[2],\"pname\":obj[3],\"quantity\":obj[5],\"price\":obj[6],\"dateVal\":obj[7],\"status\":a});\r\n            }\r\n\r\n          })         \r\n       });\r\n     })\r\n     let meta = this;\r\n      //  meta.alltablework();\r\n        meta.web3Service.getUserBalance().then(balance => meta.balance = balance);\r\n        meta.web3Service.getAccount().then(acc => {\r\n            this.account = acc;\r\n            meta.id1 = setInterval(function() {\r\n             if (typeof window.web3 !== 'undefined') {\r\n                 meta._web3 = new Web3(window.web3.currentProvider);\r\n                 if (meta._web3.eth.accounts[0] !== meta.account) {\r\n                     meta.account = meta._web3.eth.accounts[0];\r\n                     if (meta._web3.eth.accounts[0] === undefined) {\r\n                         meta.router.navigate(['metamask']);\r\n                         clearInterval(this.interval);\r\n                     } else {\r\n                        // alert('Address Change Detected Please Refresh Page');\r\n                       // window.location.reload();\r\n                     }\r\n                 }\r\n             } else {\r\n                 meta.router.navigate(['metamask']);\r\n             }\r\n            }, 200);\r\n         });\r\n  \r\n         meta.id2 = setInterval(function() {\r\n          meta.web3Service.getUserBalance().then(balance => this.balance = balance);\r\n          meta.web3Service.getAccount().then(account => this.balance = account);\r\n        //  meta.alltablework();\r\n      }, 20000);\r\n  }\r\n\r\n}\r\n\r\n","module.exports = \"<div class=\\\"col-sm-4\\\"></div>\\r\\n\\r\\n  <div class=\\\"container\\\" style=\\\"margin-top: 100px; \\\">\\r\\n\\r\\n          <div class=\\\"col-sm-6\\\">\\r\\n              <form class=\\\"form-horizontal\\\" [formGroup]=\\\"angForm\\\" novalidate>\\r\\n                  <div>\\r\\n                   <!-- <h5><b>You are Allowed to Withdraw a Maximum of {{total-stake}} ether</b></h5> -->\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"control-label col-sm-2\\\" for=\\\"amount\\\">Amount<font color=\\\"red\\\">*</font></label>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                      <input type=\\\"number\\\" class=\\\"form-control\\\"  min=\\\"0\\\" name=\\\"amount\\\"  [(ngModel)]=\\\"amount\\\" formControlName=\\\"amount\\\"  placeholder=\\\"Enter Amount in ether\\\">\\r\\n                    </div>\\r\\n                  </div>\\r\\n        \\r\\n        \\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\r\\n                      <div *ngIf=\\\"angForm.controls['amount'].valid \\\">\\r\\n                        <button type=\\\"submit\\\" (click)=\\\"Withdraw()\\\" class=\\\"btn btn-default\\\">WithDraw</button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </form>\\r\\n          </div>\\r\\n        </div>\\r\\n<div  class=\\\"col-sm-4\\\">\\r\\n     <ngx-spinner  bdColor=\\\"rgba(51,51,51,0.8)\\\"\\r\\nsize=\\\"medium\\\"\\r\\ncolor=\\\"#fff\\\"\\r\\nloadingText=\\\"Loading...\\\"\\r\\ntype=\\\"ball-scale-multiple\\\"></ngx-spinner>\\r\\n    \\r\\n\\r\\n\\r\\n</div>\\r\\n       \\r\\n     \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n      \"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { Web3servicesService } from '../services/web3services.service';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, Validators ,FormGroup,FormControl} from '@angular/forms';\r\n\r\ndeclare let window: any;\r\nimport * as Web3 from 'web3';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport swal from 'sweetalert';\r\n\r\n\r\n@Component({\r\n  selector: 'app-withdraw',\r\n  templateUrl: './withdraw.component.html',\r\n  styleUrls: ['./withdraw.component.scss']\r\n})\r\nexport class WithdrawComponent implements OnInit {\r\n\r\n  public amount;\r\n  public  _web3: any;\r\n  public id1: any;\r\n  public id2: any;\r\n  public account:string;\r\n  public balance:number;\r\n  public bla;\r\n  public total:number;\r\n  public stake:number;\r\n  angForm: FormGroup;\r\n\r\n  constructor(public pro: Web3servicesService,private router:Router,private spinner: NgxSpinnerService,private fb: FormBuilder) { \r\n\r\n      this.createForm();\r\n    //   this.show_balance();\r\n  }\r\n\r\n  ngOnInit() {\r\n    let meta = this;\r\n      //  meta.alltablework();\r\n        meta.pro.getUserBalance().then(balance => meta.balance = balance);\r\n        meta.pro.getAccount().then(acc => {\r\n            this.account = acc;\r\n            meta.id1 = setInterval(function() {\r\n             if (typeof window.web3 !== 'undefined') {\r\n                 meta._web3 = new Web3(window.web3.currentProvider);\r\n                 if (meta._web3.eth.accounts[0] !== meta.account) {\r\n                     meta.account = meta._web3.eth.accounts[0];\r\n                     if (meta._web3.eth.accounts[0] === undefined) {\r\n                         meta.router.navigate(['metamask']);\r\n                         clearInterval(this.interval);\r\n                     } else {\r\n                       //  alert('Address Change Detected Please Refresh Page');\r\n                     }\r\n                 }\r\n             } else {\r\n                 meta.router.navigate(['metamask']);\r\n             }\r\n            }, 200);\r\n         });\r\n  \r\n         meta.id2 = setInterval(function() {\r\n          meta.pro.getUserBalance().then(balance => this.balance = balance);\r\n          meta.pro.getAccount().then(account => this.balance = account);\r\n        //  meta.alltablework();\r\n      }, 20000);\r\n  }\r\n\r\n createForm() {\r\n    this.angForm = this.fb.group({\r\n        amount: ['', Validators.required ],\r\n    });\r\n  }\r\n\r\n// show_balance(){\r\n//     let meta=this;\r\n//     meta.pro.getbalance().then(total_amt =>this.total = total_amt);\r\n//     meta.pro.check_balance().then(balance =>this.stake = balance );\r\n// }\r\n\r\n  Withdraw(){\r\n      let meta=this;\r\n      meta.spinner.show();\r\n     console.log(this.balance);\r\n      meta.pro.WithDraw(this.amount).then(res=>{\r\n        if(res==0){\r\n          this.spinner.hide();\r\n          swal(\"operation rejected\");\r\n          this.amount=\"\";\r\n          window.location.reload();\r\n      }\r\n      else{ \r\n          meta.pro.hash(res).then(result=>{\r\n            this.spinner.hide(); \r\n            swal(result);   \r\n            this.amount=\"\";\r\n           // window.location.reload();           \r\n         })\r\n      }\r\n     })\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}